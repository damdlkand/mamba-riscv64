name: Build & Run on RISC-V

on:
  workflow_dispatch:
  push:

jobs:
  build-and-run:
    runs-on: [self-hosted, Linux, RISCV64]
    permissions:
      contents: read

    steps:
      # 1) 预检：Runner 用户可直接用 docker（不需要 sudo）
      - name: Preflight | docker usable without sudo
        shell: bash
        run: docker version >/dev/null || { echo "Docker not ready"; exit 1; }

      # 2) 检查私钥 Secret 是否存在（用于 SSH 走 443 拉仓库）
      - name: Preflight | ensure SECOND present
        shell: bash
        run: |
          if [ -z "${{ secrets.SECOND }}" ]; then
            echo "ERROR: Secret SECOND is empty or missing." >&2
            exit 1
          fi
          echo "OK: SECOND is set."

      # 3) 写入并校验 OpenSSH 私钥
      - name: Write & validate SSH key
        shell: bash
        run: |
          umask 077
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.SECOND }}" > ~/.ssh/ci_rsa
          ssh-keygen -y -f ~/.ssh/ci_rsa >/dev/null \
            || { echo "ERROR: SECOND is not a valid OpenSSH private key"; exit 2; }
          echo "OK: SSH key format looks good."

      # 4) 强制 Git 走 ssh.github.com:443（绕过 22 端口限制）
      - name: Force SSH over 443 for GitHub
        shell: bash
        run: |
          cat >> ~/.ssh/config <<'EOF'
          Host github.com
            HostName ssh.github.com
            Port 443
            User git
            IdentityFile ~/.ssh/ci_rsa
            IdentitiesOnly yes
            StrictHostKeyChecking no
          EOF

      # 5) 把 https remotes 重写为 ssh，并降级到协议 v1（兼容性更好）
      - name: Use SSH instead of HTTPS (and protocol v1)
        shell: bash
        run: |
          git config --global url."git@github.com:".insteadOf "https://github.com/"
          git config --global protocol.version 1

      # 6) 预检：真正拨通 git-upload-pack@443
      - name: Preflight | git ls-remote over SSH:443
        shell: bash
        run: git ls-remote git@github.com:${{ github.repository }}.git | head -n 5

      # 7) checkout 到 $GITHUB_WORKSPACE（自托管路径形如 _work/<repo>/<repo>）
      - name: Checkout repository (SSH on 443)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false

      # 8) 宿主校验：必须存在 .git 与 deb2conda
      - name: Verify checkout on host
        shell: bash
        run: |
          set -euo pipefail
          echo "GITHUB_WORKSPACE=${{ github.workspace }}"
          test -d "${{ github.workspace }}/.git" || { echo "ERROR: .git missing"; exit 1; }
          test -d "${{ github.workspace }}/deb2conda" || { echo "ERROR: deb2conda missing"; exit 1; }
          ls -la "${{ github.workspace }}" | head -n 80

      # 9) Runner 信息（可选）
      - name: Show runner info
        shell: bash
        run: |
          echo "Workspace: ${{ github.workspace }}"
          uname -a

      # 10) Docker build：强制禁用 BuildKit（避免提示要求 buildx）
      - name: Docker build (classic builder; buildx & BuildKit disabled)
        shell: bash
        env:
          DOCKER_BUILDKIT: "0"   # 关键！禁用 BuildKit，走老的 builder
        run: |
          set -euo pipefail
          IMAGE_TAG="local/mamba-riscv64:${{ github.sha }}"
          docker build \
            -t "$IMAGE_TAG" \
            -t local/mamba-riscv64:latest \
            .
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"
          IMAGE_ID="$(docker images -q "$IMAGE_TAG" | head -n1)"
          echo "IMAGE_ID=$IMAGE_ID" >> "$GITHUB_ENV"

      # 11) 校验镜像存在
      - name: Verify image built
        shell: bash
        run: |
          set -euo pipefail
          test -n "${IMAGE_TAG:-}" && test -n "${IMAGE_ID:-}" || { echo "IMAGE envs missing"; exit 1; }
          docker image inspect "$IMAGE_TAG" >/dev/null
          echo "OK: $IMAGE_TAG exists ($IMAGE_ID)"

      # 12) 在“宿主的仓库根”创建本地 Conda 频道目录
      - name: Create local conda channel dirs (on host)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "${{ github.workspace }}/local-conda-channel/linux-riscv64" \
                   "${{ github.workspace }}/local-conda-channel/noarch"
          ls -al "${{ github.workspace }}/local-conda-channel"

      # 13) 正确挂载：整个仓库 → /workspace；容器内再次校验 deb2conda 与本地频道
      - name: Run container with repo mounted at /workspace
        shell: bash
        run: |
          set -euo pipefail
          echo "Using image: $IMAGE_TAG (id: $IMAGE_ID)"
          docker run -d --name mamba-dev \
            -v "${{ github.workspace }}:/workspace:rw" \
            -w /workspace \
            -e LOCAL_CHANNEL="file:///workspace/local-conda-channel" \
            "$IMAGE_TAG" \
            bash -lc '
              set -euo pipefail
              echo "pwd: $(pwd)"
              test -d /workspace/deb2conda || { echo "ERROR: /workspace/deb2conda missing"; exit 1; }
              ls -la /workspace | head -n 80
              ls -la /workspace/local-conda-channel
              echo "LOCAL_CHANNEL=$LOCAL_CHANNEL"
              echo "container OK"
            '
