name: Build & Run on RISC-V

on:
  workflow_dispatch:    # 手动触发
  push:                 # 推送触发

jobs:
  build-and-run:
    runs-on: [self-hosted, Linux, RISCV64]
    permissions:
      contents: read

    steps:
      # 让 GitHub 走 SSH 的 443 端口
      - name: Force SSH over 443 for GitHub
        run: |
          mkdir -p ~/.ssh
          printf "Host github.com\n  HostName ssh.github.com\n  Port 443\n  User git\n  IdentitiesOnly yes\n  StrictHostKeyChecking no\n" >> ~/.ssh/config

      # 用 SSH 私钥完成 checkout（关键）
      - name: Checkout repository (SSH on 443)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1              # 只拉本次提交历史；要全历史改成 0
          persist-credentials: false
          ssh-key: ${{ secrets.CI_SSH_KEY }}
          # 如需子模块/LFS，请取消注释：
          # submodules: recursive
          # lfs: true
          # fetch-tags: true

      # 验证：确认已经拉到代码
      - name: Verify checkout
        run: |
          git -C "${{ github.workspace }}" rev-parse --short HEAD
          ls -la "${{ github.workspace }}" | head -n 50

      # 展示 runner 信息
      - name: Show runner info
        run: |
          echo "Workspace: ${{ github.workspace }}"
          uname -a

      # Docker build
      - name: Docker build
        run: |
          IMAGE_TAG="local/mamba-riscv64:${{ github.sha }}"
          sudo docker build -t "$IMAGE_TAG" .
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"
          echo "IMAGE_ID=$(sudo docker images -q "$IMAGE_TAG")" >> "$GITHUB_ENV"

      # 验证镜像存在
      - name: Verify image built
        run: |
          test -n "$IMAGE_TAG" && test -n "$IMAGE_ID" || (echo "IMAGE envs missing" && exit 1)
          sudo docker image inspect "$IMAGE_TAG" >/dev/null
          echo "OK: $IMAGE_TAG exists with id $IMAGE_ID"

      # 创建本地 conda 渠道目录
      - name: Create local conda channel dirs
        run: |
          mkdir -p local-conda-channel/linux-riscv64 local-conda-channel/noarch
          ls -al local-conda-channel

      # 运行容器并挂载仓库到 /workspace
      - name: Run container with repo mounted at /workspace
        run: |
          echo "Using image: $IMAGE_TAG (id: $IMAGE_ID)"
          sudo docker run --rm \
            -v "${{ github.workspace }}:/workspace" \
            "$IMAGE_TAG" \
            bash -lc 'pwd; ls -la /workspace; echo "container OK"'
